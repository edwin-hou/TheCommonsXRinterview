{"ast":null,"code":"import { Link } from \"react-router-dom\";\nimport axios from 'axios';\nvar config = {\n  headers: {\n    'Content-Length': 0,\n    'Content-Type': 'text/plain'\n  },\n  responseType: 'text'\n};\nfunction query(q) {\n  return axios.post('http://localhost:5000/query', q, config);\n  // .then((getResponse) => {\n  //     console.log(getResponse.data)\n  //     return getResponse.data\n  // });\n}\n\nfunction add_student(name, id, points, teacher, period) {\n  return axios.post(\"http://localhost:5000/query\", \"INSERT INTO apeurodiscussion(Name, Id, Points, Teacher, Period) VALUES (\" + JSON.stringify(name) + ', ' + id + ', ' + points + ', ' + JSON.stringify(teacher) + ', ' + period + ')', config);\n}\nfunction update_student(id, field, value) {\n  return axios.post('http://localhost:5000/query', \"UPDATE apeurodiscussion SET \" + field + \" = \" + JSON.stringify(value) + \" WHERE Id = \" + id, config);\n}\nconst Leaderboard = () => {\n  function compare(a, b) {\n    if (a.points > b.points) {\n      return -1;\n    }\n    if (a.points < b.points) {\n      return 1;\n    }\n    return 0;\n  }\n  let students = [];\n\n  // query(\"INSERT INTO apeurodiscussion(Name, Id, Points, Teacher, Period) VALUES ('Edwin', 1, 0, 'Hughes', 6);\").then(data => {\n  //     console.log(data)\n  // })\n\n  add_student('a', 0, 100, 'hughes', 1);\n  // update_student(1, \"Name\", \"Edwin\")\n};\n_c = Leaderboard;\ndocument.body.style.background = \"#242526\";\nquery(\"SELECT * FROM apeurodiscussion\");\n\n//     getDocs(colRef).then((snapshot) => {\n//         students = []\n//         snapshot.docs.forEach((doc) => {\n//             students.push(doc.data())\n//         })\n//         // console.log(students.length)\n//     }).then(() => {\n\n//         students.sort(compare)\n//         var sum = 0\n//         for (let i = 0; i < students.length; i++) {\n//             sum += students[i].points\n//         }\n//         var average = sum / students.length\n//         average = average.toFixed(2)\n//         const div = document.createElement('div')\n//         var name = document.createElement('p')\n//         var raw_score = document.createElement('p')\n//         var actual_score = document.createElement('p')\n//         var average_score = document.createElement('p')\n//         div.style = 'background-color:white;width: 98%; height:' + window.outerHeight * 0.08 + 'px;border-width:5px; border-style: solid; display: flex; justify-content: left; align-items: center;text-align: center'\n//         div.style.position = 'absolute'\n//         div.style.marginTop = window.outerHeight * 0.01 + \"px\";\n//         div.style.marginLeft = \"0.5%\"\n//         div.style.borderRadius = \"20px\"\n//         name.innerText = \"Name:\";\n//         name.style.fontSize = window.outerHeight * 0.08 * 0.25 + 'px'\n//         name.style.fontFamily = 'Karla'\n//         name.style.marginLeft = '1%'\n//         name.style.position = 'absolute'\n//         raw_score.innerText = \"Score:\";\n//         raw_score.style.marginLeft = '50%'\n//         raw_score.style.position = 'absolute'\n//         raw_score.style.fontSize = window.outerHeight * 0.08 * 0.25 + 'px'\n//         raw_score.style.fontFamily = 'Karla'\n//         actual_score.innerText = \"Percentage:\";\n//         actual_score.style.position = 'absolute'\n//         actual_score.style.fontSize = window.outerHeight * 0.08 * 0.25 + 'px'\n//         actual_score.style.fontFamily = 'Karla'\n//         actual_score.style.marginLeft = '80%'\n//         average_score.innerText = \"Average Score: \" + average;\n//         average_score.style.marginLeft = '20%'\n//         average_score.style.position = 'absolute'\n//         average_score.style.fontSize = window.outerHeight * 0.08 * 0.25 + 'px'\n//         average_score.style.fontFamily = 'Karla'\n//         average_score.className = 'average_score'\n//         div.style.background = '#6c6f72'\n//         div.appendChild(name)\n//         div.append(average_score)\n//         div.appendChild(raw_score)\n//         div.appendChild(actual_score)\n//         document.body.appendChild(div)\n\n//         for (let i = 0; i < students.length; i++) {\n//             try {\n//                 const div = document.createElement('div')\n//                 var name = document.createElement('p')\n//                 var raw_score = document.createElement('p')\n//                 var actual_score = document.createElement('p')\n//                 div.style = 'background-color:white;width: 98%; height:' + window.outerHeight * 0.08 + 'px;border-width:5px; border-style: solid; display: flex; justify-content: left; align-items: center;text-align: center'\n//                 div.style.position = 'absolute'\n//                 div.style.marginTop = window.outerHeight * 0.08 * (i + 1) + (i + 1) * 20 + window.outerHeight * 0.01 + \"px\";\n//                 div.style.marginLeft = \"0.5%\"\n//                 div.style.borderRadius = \"20px\"\n//                 div.className = students[i].name\n//                 name.innerText = students[i].name;\n//                 name.style.fontSize = window.outerHeight * 0.08 * 0.25 + 'px'\n//                 name.style.fontFamily = 'Karla'\n//                 name.style.marginLeft = '1%'\n//                 name.style.position = 'absolute'\n//                 name.className = \"name\"\n//                 raw_score.innerText = students[i].points;\n//                 raw_score.style.marginLeft = '50%'\n//                 raw_score.style.position = 'absolute'\n//                 raw_score.style.fontSize = window.outerHeight * 0.08 * 0.25 + 'px'\n//                 raw_score.style.fontFamily = 'Karla'\n//                 raw_score.className = \"raw_score\"\n//                 actual_score.innerText = (students[i].points / average * 100).toFixed(2) + '%'\n//                 actual_score.style.position = 'absolute'\n//                 actual_score.style.fontSize = window.outerHeight * 0.08 * 0.25 + 'px'\n//                 actual_score.style.fontFamily = 'Karla'\n//                 actual_score.style.marginLeft = '80%'\n//                 actual_score.className = \"actual_score\"\n//                 div.style.background = '#6c6f72'\n\n//                 div.appendChild(name)\n//                 div.appendChild(raw_score)\n//                 div.appendChild(actual_score)\n//                 document.body.appendChild(div)\n\n//             }\n//             catch {\n\n//             }\n//         }\n//         onSnapshot(colRef, (snapshot) => {\n//             students = []\n//             snapshot.docs.forEach((doc) => {\n//                 students.push(doc.data())\n//             })\n//             students.sort(compare)\n//             var sum = 0\n//             for (let i = 0; i < students.length; i++) {\n//                 sum += students[i].points\n//             }\n//             var average = sum / students.length\n//             average = average.toFixed(2)\n//             for (let i = 1; i < students.length + 1; i++) {\n//                 document.getElementsByClassName('average_score')[0].innerHTML = 'Average Score: ' + average\n//                 document.getElementsByTagName(\"div\")[i].getElementsByClassName(\"name\")[0].innerHTML = students[i - 1].name\n//                 document.getElementsByTagName(\"div\")[i].getElementsByClassName(\"raw_score\")[0].innerHTML = students[i - 1].points\n//                 document.getElementsByTagName(\"div\")[i].getElementsByClassName(\"actual_score\")[0].innerHTML = (students[i - 1].points / average * 100).toFixed(2) + \"%\"\n\n//             }\n//         })\n\n//     })\n//     return (\n//         <div>\n//             <Link style={{ marginLeft: 100 }} to=\"/\">home</Link>\n//             <Link style={{ marginLeft: 100 }} to=\"/recorder\">recorder</Link>\n//             <Link style={{ marginLeft: 100 }} to=\"/leaderboard\">leaderboard</Link>\n//         </div>\n//     )\n\nexport default Leaderboard;\nvar _c;\n$RefreshReg$(_c, \"Leaderboard\");","map":{"version":3,"names":["Link","axios","config","headers","responseType","query","q","post","add_student","name","id","points","teacher","period","JSON","stringify","update_student","field","value","Leaderboard","compare","a","b","students","document","body","style","background"],"sources":["C:/Users/edwin/Desktop/apeurodiscussion/clients/src/leaderboard.js"],"sourcesContent":["import { Link } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nvar config = {\r\n    headers: {\r\n        'Content-Length': 0,\r\n        'Content-Type': 'text/plain'\r\n    },\r\n    responseType: 'text'\r\n};\r\nfunction query(q) {\r\n    return axios.post('http://localhost:5000/query', q, config)\r\n    // .then((getResponse) => {\r\n    //     console.log(getResponse.data)\r\n    //     return getResponse.data\r\n    // });\r\n}\r\nfunction add_student(name, id, points, teacher, period) {\r\n    \r\n    return axios.post(\"http://localhost:5000/query\", \"INSERT INTO apeurodiscussion(Name, Id, Points, Teacher, Period) VALUES (\"+JSON.stringify(name)+', '+id + ', '+ points + ', ' + JSON.stringify(teacher) + ', ' + period + ')', config)\r\n}\r\nfunction update_student(id, field, value) {\r\n    return axios.post('http://localhost:5000/query', \"UPDATE apeurodiscussion SET \" + field + \" = \" + JSON.stringify(value) + \" WHERE Id = \" + id, config)\r\n}\r\n\r\n\r\nconst Leaderboard = () => {\r\n\r\n    function compare(a, b) {\r\n        if (a.points > b.points) {\r\n            return -1;\r\n        }\r\n        if (a.points < b.points) {\r\n            return 1;\r\n        }\r\n        return 0;\r\n    }\r\n    let students = []\r\n\r\n    // query(\"INSERT INTO apeurodiscussion(Name, Id, Points, Teacher, Period) VALUES ('Edwin', 1, 0, 'Hughes', 6);\").then(data => {\r\n    //     console.log(data)\r\n    // })\r\n\r\n    add_student('a',0,100,'hughes',1)\r\n    // update_student(1, \"Name\", \"Edwin\")\r\n};\r\n\r\ndocument.body.style.background = \"#242526\"\r\nquery(\"SELECT * FROM apeurodiscussion\")\r\n\r\n//     getDocs(colRef).then((snapshot) => {\r\n//         students = []\r\n//         snapshot.docs.forEach((doc) => {\r\n//             students.push(doc.data())\r\n//         })\r\n//         // console.log(students.length)\r\n//     }).then(() => {\r\n\r\n//         students.sort(compare)\r\n//         var sum = 0\r\n//         for (let i = 0; i < students.length; i++) {\r\n//             sum += students[i].points\r\n//         }\r\n//         var average = sum / students.length\r\n//         average = average.toFixed(2)\r\n//         const div = document.createElement('div')\r\n//         var name = document.createElement('p')\r\n//         var raw_score = document.createElement('p')\r\n//         var actual_score = document.createElement('p')\r\n//         var average_score = document.createElement('p')\r\n//         div.style = 'background-color:white;width: 98%; height:' + window.outerHeight * 0.08 + 'px;border-width:5px; border-style: solid; display: flex; justify-content: left; align-items: center;text-align: center'\r\n//         div.style.position = 'absolute'\r\n//         div.style.marginTop = window.outerHeight * 0.01 + \"px\";\r\n//         div.style.marginLeft = \"0.5%\"\r\n//         div.style.borderRadius = \"20px\"\r\n//         name.innerText = \"Name:\";\r\n//         name.style.fontSize = window.outerHeight * 0.08 * 0.25 + 'px'\r\n//         name.style.fontFamily = 'Karla'\r\n//         name.style.marginLeft = '1%'\r\n//         name.style.position = 'absolute'\r\n//         raw_score.innerText = \"Score:\";\r\n//         raw_score.style.marginLeft = '50%'\r\n//         raw_score.style.position = 'absolute'\r\n//         raw_score.style.fontSize = window.outerHeight * 0.08 * 0.25 + 'px'\r\n//         raw_score.style.fontFamily = 'Karla'\r\n//         actual_score.innerText = \"Percentage:\";\r\n//         actual_score.style.position = 'absolute'\r\n//         actual_score.style.fontSize = window.outerHeight * 0.08 * 0.25 + 'px'\r\n//         actual_score.style.fontFamily = 'Karla'\r\n//         actual_score.style.marginLeft = '80%'\r\n//         average_score.innerText = \"Average Score: \" + average;\r\n//         average_score.style.marginLeft = '20%'\r\n//         average_score.style.position = 'absolute'\r\n//         average_score.style.fontSize = window.outerHeight * 0.08 * 0.25 + 'px'\r\n//         average_score.style.fontFamily = 'Karla'\r\n//         average_score.className = 'average_score'\r\n//         div.style.background = '#6c6f72'\r\n//         div.appendChild(name)\r\n//         div.append(average_score)\r\n//         div.appendChild(raw_score)\r\n//         div.appendChild(actual_score)\r\n//         document.body.appendChild(div)\r\n\r\n//         for (let i = 0; i < students.length; i++) {\r\n//             try {\r\n//                 const div = document.createElement('div')\r\n//                 var name = document.createElement('p')\r\n//                 var raw_score = document.createElement('p')\r\n//                 var actual_score = document.createElement('p')\r\n//                 div.style = 'background-color:white;width: 98%; height:' + window.outerHeight * 0.08 + 'px;border-width:5px; border-style: solid; display: flex; justify-content: left; align-items: center;text-align: center'\r\n//                 div.style.position = 'absolute'\r\n//                 div.style.marginTop = window.outerHeight * 0.08 * (i + 1) + (i + 1) * 20 + window.outerHeight * 0.01 + \"px\";\r\n//                 div.style.marginLeft = \"0.5%\"\r\n//                 div.style.borderRadius = \"20px\"\r\n//                 div.className = students[i].name\r\n//                 name.innerText = students[i].name;\r\n//                 name.style.fontSize = window.outerHeight * 0.08 * 0.25 + 'px'\r\n//                 name.style.fontFamily = 'Karla'\r\n//                 name.style.marginLeft = '1%'\r\n//                 name.style.position = 'absolute'\r\n//                 name.className = \"name\"\r\n//                 raw_score.innerText = students[i].points;\r\n//                 raw_score.style.marginLeft = '50%'\r\n//                 raw_score.style.position = 'absolute'\r\n//                 raw_score.style.fontSize = window.outerHeight * 0.08 * 0.25 + 'px'\r\n//                 raw_score.style.fontFamily = 'Karla'\r\n//                 raw_score.className = \"raw_score\"\r\n//                 actual_score.innerText = (students[i].points / average * 100).toFixed(2) + '%'\r\n//                 actual_score.style.position = 'absolute'\r\n//                 actual_score.style.fontSize = window.outerHeight * 0.08 * 0.25 + 'px'\r\n//                 actual_score.style.fontFamily = 'Karla'\r\n//                 actual_score.style.marginLeft = '80%'\r\n//                 actual_score.className = \"actual_score\"\r\n//                 div.style.background = '#6c6f72'\r\n\r\n//                 div.appendChild(name)\r\n//                 div.appendChild(raw_score)\r\n//                 div.appendChild(actual_score)\r\n//                 document.body.appendChild(div)\r\n\r\n//             }\r\n//             catch {\r\n\r\n//             }\r\n//         }\r\n//         onSnapshot(colRef, (snapshot) => {\r\n//             students = []\r\n//             snapshot.docs.forEach((doc) => {\r\n//                 students.push(doc.data())\r\n//             })\r\n//             students.sort(compare)\r\n//             var sum = 0\r\n//             for (let i = 0; i < students.length; i++) {\r\n//                 sum += students[i].points\r\n//             }\r\n//             var average = sum / students.length\r\n//             average = average.toFixed(2)\r\n//             for (let i = 1; i < students.length + 1; i++) {\r\n//                 document.getElementsByClassName('average_score')[0].innerHTML = 'Average Score: ' + average\r\n//                 document.getElementsByTagName(\"div\")[i].getElementsByClassName(\"name\")[0].innerHTML = students[i - 1].name\r\n//                 document.getElementsByTagName(\"div\")[i].getElementsByClassName(\"raw_score\")[0].innerHTML = students[i - 1].points\r\n//                 document.getElementsByTagName(\"div\")[i].getElementsByClassName(\"actual_score\")[0].innerHTML = (students[i - 1].points / average * 100).toFixed(2) + \"%\"\r\n\r\n//             }\r\n//         })\r\n\r\n//     })\r\n//     return (\r\n//         <div>\r\n//             <Link style={{ marginLeft: 100 }} to=\"/\">home</Link>\r\n//             <Link style={{ marginLeft: 100 }} to=\"/recorder\">recorder</Link>\r\n//             <Link style={{ marginLeft: 100 }} to=\"/leaderboard\">leaderboard</Link>\r\n//         </div>\r\n//     )\r\n\r\n\r\nexport default Leaderboard"],"mappings":"AAAA,SAASA,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,IAAIC,MAAM,GAAG;EACTC,OAAO,EAAE;IACL,gBAAgB,EAAE,CAAC;IACnB,cAAc,EAAE;EACpB,CAAC;EACDC,YAAY,EAAE;AAClB,CAAC;AACD,SAASC,KAAK,CAACC,CAAC,EAAE;EACd,OAAOL,KAAK,CAACM,IAAI,CAAC,6BAA6B,EAAED,CAAC,EAAEJ,MAAM,CAAC;EAC3D;EACA;EACA;EACA;AACJ;;AACA,SAASM,WAAW,CAACC,IAAI,EAAEC,EAAE,EAAEC,MAAM,EAAEC,OAAO,EAAEC,MAAM,EAAE;EAEpD,OAAOZ,KAAK,CAACM,IAAI,CAAC,6BAA6B,EAAE,0EAA0E,GAACO,IAAI,CAACC,SAAS,CAACN,IAAI,CAAC,GAAC,IAAI,GAACC,EAAE,GAAG,IAAI,GAAEC,MAAM,GAAG,IAAI,GAAGG,IAAI,CAACC,SAAS,CAACH,OAAO,CAAC,GAAG,IAAI,GAAGC,MAAM,GAAG,GAAG,EAAEX,MAAM,CAAC;AAC3O;AACA,SAASc,cAAc,CAACN,EAAE,EAAEO,KAAK,EAAEC,KAAK,EAAE;EACtC,OAAOjB,KAAK,CAACM,IAAI,CAAC,6BAA6B,EAAE,8BAA8B,GAAGU,KAAK,GAAG,KAAK,GAAGH,IAAI,CAACC,SAAS,CAACG,KAAK,CAAC,GAAG,cAAc,GAAGR,EAAE,EAAER,MAAM,CAAC;AAC1J;AAGA,MAAMiB,WAAW,GAAG,MAAM;EAEtB,SAASC,OAAO,CAACC,CAAC,EAAEC,CAAC,EAAE;IACnB,IAAID,CAAC,CAACV,MAAM,GAAGW,CAAC,CAACX,MAAM,EAAE;MACrB,OAAO,CAAC,CAAC;IACb;IACA,IAAIU,CAAC,CAACV,MAAM,GAAGW,CAAC,CAACX,MAAM,EAAE;MACrB,OAAO,CAAC;IACZ;IACA,OAAO,CAAC;EACZ;EACA,IAAIY,QAAQ,GAAG,EAAE;;EAEjB;EACA;EACA;;EAEAf,WAAW,CAAC,GAAG,EAAC,CAAC,EAAC,GAAG,EAAC,QAAQ,EAAC,CAAC,CAAC;EACjC;AACJ,CAAC;AAAC,KAnBIW,WAAW;AAqBjBK,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,UAAU,GAAG,SAAS;AAC1CtB,KAAK,CAAC,gCAAgC,CAAC;;AAEveAAec,WAAW;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}