{"ast":null,"code":"import { Link } from \"react-router-dom\";\nimport axios from 'axios';\nimport io from 'socket.io-client';\nlet a = [\"Akash\tGupta-Verma\", \"Alex\tYung\", \"Althea\tHaas\", \"August\tSanders\", \"Ava\tDelaossa\", \"Ava\tThompson\", \"Azure\tZilka\", \"Bianca\tNazarian\", \"Bria\tShimada\", \"Brody\tHorwitz\", \"Brooke\tHanson\", \"Claire\tMayder\", \"Dat\tPhan\", \"Eric\tWang\", \"Grayson\tDyer\", \"Hoa\tNguyen\", \"Jovian\tHayden\", \"Kaedon\tChung\", \"Keira\tSullivan\", \"Leo\tMonteiro Villela\", \"Nisha\tJani\", \"Noa\tDohler Guilera\", \"Paola\tGomez-Llagaria\", \"Parker\tWinokur\", \"Saira\tPanchal\", \"Sara\tNiemeyer\", \"Shaurya\tBanjara\", \"Sky\tTaylor\", \"Tanav\tShankar\", \"Yanis\tMalhotra\", \"Zac\tRenfrew\", \"Zach\tBiller\"];\nconst Leaderboard = () => {\n  for (let i = 0; i < a.length; i++) {\n    add_student(a[i], i, 0, \"Hughes\", 6);\n  }\n};\n\n// const Leaderboard = () => {\n//     var database_data\n//     function compare(a, b) {\n//         if (a.points > b.points) {\n//             return -1;\n//         }\n//         if (a.points < b.points) {\n//             return 1;\n//         }\n//         return 0;\n\n//     }\n//     const socket = io('http://localhost:5000');\n//     socket.on('connect', (data) => {\n//         console.log(\"connected to socket\")\n//         socket.emit('get_database')\n//     })\n//     socket.on('all_data', (data) => {\n//         students = data\n//         build_page()\n//     })\n//     socket.on('update_page', (data) => {\n//         database_data = data\n//         database_data.sort(compare)\n//         students.sort(compare)\n//         if (database_data.length !== students.length) {\n//             document.body.innerHTML = ''\n//             students = database_data\n//             build_page()\n//         }\n//         else {\n//             students = database_data\n//             var sum = 0\n//             for (let i = 0; i < students.length; i++) {\n//                 sum += students[i].points\n//             }\n//             var average = sum / students.length\n//             average = average.toFixed(2)\n//             for (let i = 3; i < students.length + 3; i++) {\n//                 document.getElementsByClassName('average_score')[0].innerHTML = 'Average Score: ' + average\n//                 document.getElementsByTagName(\"div\")[i].getElementsByClassName(\"name\")[0].innerHTML = students[i - 3].name\n//                 document.getElementsByTagName(\"div\")[i].getElementsByClassName(\"raw_score\")[0].innerHTML = students[i - 3].points\n//                 document.getElementsByTagName(\"div\")[i].getElementsByClassName(\"actual_score\")[0].innerHTML = (students[i - 3].points / average * 100).toFixed(2) + \"%\"\n\n//             }\n//         }\n\n//         build_page()\n\n//     })\n//     document.body.style.background = \"#242526\"\n//     let students = []\n//     function build_page() {\n//         console.log(students)\n//         students.sort(compare)\n//         var sum = 0\n//         for (let i = 0; i < students.length; i++) {\n//             sum += students[i].points\n//         }\n//         var average = sum / students.length\n//         average = average.toFixed(2)\n//         const div = document.createElement('div')\n//         var name = document.createElement('p')\n//         var raw_score = document.createElement('p')\n//         var actual_score = document.createElement('p')\n//         var average_score = document.createElement('p')\n//         div.style = 'background-color:white;width: 98%; height:' + window.outerHeight * 0.08 + 'px;border-width:5px; border-style: solid; display: flex; justify-content: left; align-items: center;text-align: center'\n//         div.style.position = 'absolute'\n//         div.style.marginTop = window.outerHeight * 0.01 + \"px\";\n//         div.style.marginLeft = \"0.5%\"\n//         div.style.borderRadius = \"20px\"\n//         name.innerText = \"Name:\";\n//         name.style.fontSize = window.outerHeight * 0.08 * 0.25 + 'px'\n//         name.style.fontFamily = 'Karla'\n//         name.style.marginLeft = '1%'\n//         name.style.position = 'absolute'\n//         raw_score.innerText = \"Score:\";\n//         raw_score.style.marginLeft = '50%'\n//         raw_score.style.position = 'absolute'\n//         raw_score.style.fontSize = window.outerHeight * 0.08 * 0.25 + 'px'\n//         raw_score.style.fontFamily = 'Karla'\n//         actual_score.innerText = \"Percentage:\";\n//         actual_score.style.position = 'absolute'\n//         actual_score.style.fontSize = window.outerHeight * 0.08 * 0.25 + 'px'\n//         actual_score.style.fontFamily = 'Karla'\n//         actual_score.style.marginLeft = '80%'\n//         average_score.innerText = \"Average Score: \" + average;\n//         average_score.style.marginLeft = '20%'\n//         average_score.style.position = 'absolute'\n//         average_score.style.fontSize = window.outerHeight * 0.08 * 0.25 + 'px'\n//         average_score.style.fontFamily = 'Karla'\n//         average_score.className = 'average_score'\n//         div.style.background = '#6c6f72'\n//         div.appendChild(name)\n//         div.append(average_score)\n//         div.appendChild(raw_score)\n//         div.appendChild(actual_score)\n//         document.body.appendChild(div)\n\n//         for (let i = 0; i < students.length; i++) {\n//             try {\n//                 const div = document.createElement('div')\n//                 var name = document.createElement('p')\n//                 var raw_score = document.createElement('p')\n//                 var actual_score = document.createElement('p')\n//                 div.style = 'background-color:white;width: 98%; height:' + window.outerHeight * 0.08 + 'px;border-width:5px; border-style: solid; display: flex; justify-content: left; align-items: center;text-align: center'\n//                 div.style.position = 'absolute'\n//                 div.style.marginTop = window.outerHeight * 0.08 * (i + 1) + (i + 1) * 20 + window.outerHeight * 0.01 + \"px\";\n//                 div.style.marginLeft = \"0.5%\"\n//                 div.style.borderRadius = \"20px\"\n//                 div.className = students[i].name\n//                 name.innerText = students[i].name;\n//                 name.style.fontSize = window.outerHeight * 0.08 * 0.25 + 'px'\n//                 name.style.fontFamily = 'Karla'\n//                 name.style.marginLeft = '1%'\n//                 name.style.position = 'absolute'\n//                 name.className = \"name\"\n//                 raw_score.innerText = students[i].points;\n//                 raw_score.style.marginLeft = '50%'\n//                 raw_score.style.position = 'absolute'\n//                 raw_score.style.fontSize = window.outerHeight * 0.08 * 0.25 + 'px'\n//                 raw_score.style.fontFamily = 'Karla'\n//                 raw_score.className = \"raw_score\"\n//                 actual_score.innerText = (students[i].points / average * 100).toFixed(2) + '%'\n//                 actual_score.style.position = 'absolute'\n//                 actual_score.style.fontSize = window.outerHeight * 0.08 * 0.25 + 'px'\n//                 actual_score.style.fontFamily = 'Karla'\n//                 actual_score.style.marginLeft = '80%'\n//                 actual_score.className = \"actual_score\"\n//                 div.style.background = '#6c6f72'\n\n//                 div.appendChild(name)\n//                 div.appendChild(raw_score)\n//                 div.appendChild(actual_score)\n//                 document.body.appendChild(div)\n\n//             }\n//             catch {\n\n//             }\n//         }\n//     }\n\n//     return (\n//         <div>\n//             <Link style={{ marginLeft: 100 }} to=\"/\">home</Link>\n//             <Link style={{ marginLeft: 100 }} to=\"/recorder\">recorder</Link>\n//             <Link style={{ marginLeft: 100 }} to=\"/leaderboard\">leaderboard</Link>\n//         </div>\n//     )\n// }\n_c = Leaderboard;\nexport default Leaderboard;\nvar _c;\n$RefreshReg$(_c, \"Leaderboard\");","map":{"version":3,"names":["Link","axios","io","a","Leaderboard","i","length","add_student"],"sources":["C:/Users/edwin/Desktop/apeurodiscussion/clients/src/leaderboard.js"],"sourcesContent":["import { Link } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport io from 'socket.io-client';\r\n\r\nlet a = [\r\n    \"Akash\tGupta-Verma\",\r\n    \"Alex\tYung\",\r\n    \"Althea\tHaas\",\r\n    \"August\tSanders\",\r\n    \"Ava\tDelaossa\",\r\n    \"Ava\tThompson\",\r\n    \"Azure\tZilka\",\r\n    \"Bianca\tNazarian\",\r\n    \"Bria\tShimada\",\r\n    \"Brody\tHorwitz\",\r\n    \"Brooke\tHanson\",\r\n    \"Claire\tMayder\",\r\n    \"Dat\tPhan\",\r\n    \"Eric\tWang\",\r\n    \"Grayson\tDyer\",\r\n    \"Hoa\tNguyen\",\r\n    \"Jovian\tHayden\",\r\n    \"Kaedon\tChung\",\r\n    \"Keira\tSullivan\",\r\n    \"Leo\tMonteiro Villela\",\r\n    \"Nisha\tJani\",\r\n    \"Noa\tDohler Guilera\",\r\n    \"Paola\tGomez-Llagaria\",\r\n    \"Parker\tWinokur\",\r\n    \"Saira\tPanchal\",\r\n    \"Sara\tNiemeyer\",\r\n    \"Shaurya\tBanjara\",\r\n    \"Sky\tTaylor\",\r\n    \"Tanav\tShankar\",\r\n    \"Yanis\tMalhotra\",\r\n    \"Zac\tRenfrew\",\r\n    \"Zach\tBiller\",\r\n]\r\n\r\nconst Leaderboard = () => {\r\n    for (let i = 0; i< a.length; i++){\r\n        add_student(a[i], i, 0, \"Hughes\", 6)\r\n    }\r\n}\r\n\r\n// const Leaderboard = () => {\r\n//     var database_data\r\n//     function compare(a, b) {\r\n//         if (a.points > b.points) {\r\n//             return -1;\r\n//         }\r\n//         if (a.points < b.points) {\r\n//             return 1;\r\n//         }\r\n//         return 0;\r\n\r\n//     }\r\n//     const socket = io('http://localhost:5000');\r\n//     socket.on('connect', (data) => {\r\n//         console.log(\"connected to socket\")\r\n//         socket.emit('get_database')\r\n//     })\r\n//     socket.on('all_data', (data) => {\r\n//         students = data\r\n//         build_page()\r\n//     })\r\n//     socket.on('update_page', (data) => {\r\n//         database_data = data\r\n//         database_data.sort(compare)\r\n//         students.sort(compare)\r\n//         if (database_data.length !== students.length) {\r\n//             document.body.innerHTML = ''\r\n//             students = database_data\r\n//             build_page()\r\n//         }\r\n//         else {\r\n//             students = database_data\r\n//             var sum = 0\r\n//             for (let i = 0; i < students.length; i++) {\r\n//                 sum += students[i].points\r\n//             }\r\n//             var average = sum / students.length\r\n//             average = average.toFixed(2)\r\n//             for (let i = 3; i < students.length + 3; i++) {\r\n//                 document.getElementsByClassName('average_score')[0].innerHTML = 'Average Score: ' + average\r\n//                 document.getElementsByTagName(\"div\")[i].getElementsByClassName(\"name\")[0].innerHTML = students[i - 3].name\r\n//                 document.getElementsByTagName(\"div\")[i].getElementsByClassName(\"raw_score\")[0].innerHTML = students[i - 3].points\r\n//                 document.getElementsByTagName(\"div\")[i].getElementsByClassName(\"actual_score\")[0].innerHTML = (students[i - 3].points / average * 100).toFixed(2) + \"%\"\r\n\r\n//             }\r\n//         }\r\n        \r\n//         build_page()\r\n\r\n\r\n//     })\r\n//     document.body.style.background = \"#242526\"\r\n//     let students = []\r\n//     function build_page() {\r\n//         console.log(students)\r\n//         students.sort(compare)\r\n//         var sum = 0\r\n//         for (let i = 0; i < students.length; i++) {\r\n//             sum += students[i].points\r\n//         }\r\n//         var average = sum / students.length\r\n//         average = average.toFixed(2)\r\n//         const div = document.createElement('div')\r\n//         var name = document.createElement('p')\r\n//         var raw_score = document.createElement('p')\r\n//         var actual_score = document.createElement('p')\r\n//         var average_score = document.createElement('p')\r\n//         div.style = 'background-color:white;width: 98%; height:' + window.outerHeight * 0.08 + 'px;border-width:5px; border-style: solid; display: flex; justify-content: left; align-items: center;text-align: center'\r\n//         div.style.position = 'absolute'\r\n//         div.style.marginTop = window.outerHeight * 0.01 + \"px\";\r\n//         div.style.marginLeft = \"0.5%\"\r\n//         div.style.borderRadius = \"20px\"\r\n//         name.innerText = \"Name:\";\r\n//         name.style.fontSize = window.outerHeight * 0.08 * 0.25 + 'px'\r\n//         name.style.fontFamily = 'Karla'\r\n//         name.style.marginLeft = '1%'\r\n//         name.style.position = 'absolute'\r\n//         raw_score.innerText = \"Score:\";\r\n//         raw_score.style.marginLeft = '50%'\r\n//         raw_score.style.position = 'absolute'\r\n//         raw_score.style.fontSize = window.outerHeight * 0.08 * 0.25 + 'px'\r\n//         raw_score.style.fontFamily = 'Karla'\r\n//         actual_score.innerText = \"Percentage:\";\r\n//         actual_score.style.position = 'absolute'\r\n//         actual_score.style.fontSize = window.outerHeight * 0.08 * 0.25 + 'px'\r\n//         actual_score.style.fontFamily = 'Karla'\r\n//         actual_score.style.marginLeft = '80%'\r\n//         average_score.innerText = \"Average Score: \" + average;\r\n//         average_score.style.marginLeft = '20%'\r\n//         average_score.style.position = 'absolute'\r\n//         average_score.style.fontSize = window.outerHeight * 0.08 * 0.25 + 'px'\r\n//         average_score.style.fontFamily = 'Karla'\r\n//         average_score.className = 'average_score'\r\n//         div.style.background = '#6c6f72'\r\n//         div.appendChild(name)\r\n//         div.append(average_score)\r\n//         div.appendChild(raw_score)\r\n//         div.appendChild(actual_score)\r\n//         document.body.appendChild(div)\r\n\r\n//         for (let i = 0; i < students.length; i++) {\r\n//             try {\r\n//                 const div = document.createElement('div')\r\n//                 var name = document.createElement('p')\r\n//                 var raw_score = document.createElement('p')\r\n//                 var actual_score = document.createElement('p')\r\n//                 div.style = 'background-color:white;width: 98%; height:' + window.outerHeight * 0.08 + 'px;border-width:5px; border-style: solid; display: flex; justify-content: left; align-items: center;text-align: center'\r\n//                 div.style.position = 'absolute'\r\n//                 div.style.marginTop = window.outerHeight * 0.08 * (i + 1) + (i + 1) * 20 + window.outerHeight * 0.01 + \"px\";\r\n//                 div.style.marginLeft = \"0.5%\"\r\n//                 div.style.borderRadius = \"20px\"\r\n//                 div.className = students[i].name\r\n//                 name.innerText = students[i].name;\r\n//                 name.style.fontSize = window.outerHeight * 0.08 * 0.25 + 'px'\r\n//                 name.style.fontFamily = 'Karla'\r\n//                 name.style.marginLeft = '1%'\r\n//                 name.style.position = 'absolute'\r\n//                 name.className = \"name\"\r\n//                 raw_score.innerText = students[i].points;\r\n//                 raw_score.style.marginLeft = '50%'\r\n//                 raw_score.style.position = 'absolute'\r\n//                 raw_score.style.fontSize = window.outerHeight * 0.08 * 0.25 + 'px'\r\n//                 raw_score.style.fontFamily = 'Karla'\r\n//                 raw_score.className = \"raw_score\"\r\n//                 actual_score.innerText = (students[i].points / average * 100).toFixed(2) + '%'\r\n//                 actual_score.style.position = 'absolute'\r\n//                 actual_score.style.fontSize = window.outerHeight * 0.08 * 0.25 + 'px'\r\n//                 actual_score.style.fontFamily = 'Karla'\r\n//                 actual_score.style.marginLeft = '80%'\r\n//                 actual_score.className = \"actual_score\"\r\n//                 div.style.background = '#6c6f72'\r\n\r\n//                 div.appendChild(name)\r\n//                 div.appendChild(raw_score)\r\n//                 div.appendChild(actual_score)\r\n//                 document.body.appendChild(div)\r\n\r\n//             }\r\n//             catch {\r\n\r\n//             }\r\n//         }\r\n//     }\r\n\r\n//     return (\r\n//         <div>\r\n//             <Link style={{ marginLeft: 100 }} to=\"/\">home</Link>\r\n//             <Link style={{ marginLeft: 100 }} to=\"/recorder\">recorder</Link>\r\n//             <Link style={{ marginLeft: 100 }} to=\"/leaderboard\">leaderboard</Link>\r\n//         </div>\r\n//     )\r\n// }\r\n\r\nexport default Leaderboard"],"mappings":"AAAA,SAASA,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,EAAE,MAAM,kBAAkB;AAEjC,IAAIC,CAAC,GAAG,CACJ,mBAAmB,EACnB,WAAW,EACX,aAAa,EACb,gBAAgB,EAChB,cAAc,EACd,cAAc,EACd,aAAa,EACb,iBAAiB,EACjB,cAAc,EACd,eAAe,EACf,eAAe,EACf,eAAe,EACf,UAAU,EACV,WAAW,EACX,cAAc,EACd,YAAY,EACZ,eAAe,EACf,cAAc,EACd,gBAAgB,EAChB,sBAAsB,EACtB,YAAY,EACZ,oBAAoB,EACpB,sBAAsB,EACtB,gBAAgB,EAChB,eAAe,EACf,eAAe,EACf,iBAAiB,EACjB,YAAY,EACZ,eAAe,EACf,gBAAgB,EAChB,aAAa,EACb,aAAa,CAChB;AAED,MAAMC,WAAW,GAAG,MAAM;EACtB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAEF,CAAC,CAACG,MAAM,EAAED,CAAC,EAAE,EAAC;IAC7BE,WAAW,CAACJ,CAAC,CAACE,CAAC,CAAC,EAAEA,CAAC,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,CAAC;EACxC;AACJ,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,KA7JMD,WAAW;AA+JjB,eAAeA,WAAW;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}